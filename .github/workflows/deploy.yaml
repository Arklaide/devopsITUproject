name: Deploy to Digital Ocean
on:
  push:
    branches:
      - main
jobs:
  build_docker_image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Docker (login)
        run: doctl registry login
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push api
        uses: docker/build-push-action@v2
        with:
          context: "{{defaultContext}}:MinitweetApi"
          push: true
          tags: registry.digitalocean.com/devopsitu/minitwitapi:latest
      - name: Build and push frontend
        uses: docker/build-push-action@v2
        with:
          context: "{{defaultContext}}:MinitwitFrontend/MinitwitFrontend"
          push: true
          tags: registry.digitalocean.com/devopsitu/minitwitfrontend:latest
      - name: copy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: "68.183.67.47"
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          source: "docker-compose.production.yml"
          target: "/root"
      - name: Docker Compose Pull
        uses: appleboy/ssh-action@master
        with:
          host: "68.183.67.47"
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: docker-compose -f docker-compose.production.yml pull
      - name: Docker compose down
        uses: appleboy/ssh-action@master
        with:
          host: "68.183.67.47"
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: docker-compose -f docker-compose.production.yml down
      - name: Docker-compose up
        uses: appleboy/ssh-action@master
        with:
          host: "68.183.67.47"
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: docker-compose -f docker-compose.production.yml --env-file .env up -d
